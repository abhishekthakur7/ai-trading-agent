/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class Order {
    'orderIndex': number;
    'clientOrderIndex': number;
    'orderId': string;
    'clientOrderId': string;
    'marketIndex': number;
    'ownerAccountIndex': number;
    'initialBaseAmount': string;
    'price': string;
    'nonce': number;
    'remainingBaseAmount': string;
    'isAsk': boolean;
    'baseSize': number;
    'basePrice': number;
    'filledBaseAmount': string;
    'filledQuoteAmount': string;
    /**
    *  TODO: remove this
    */
    'side': string;
    'type': OrderTypeEnum;
    'timeInForce': OrderTimeInForceEnum;
    'reduceOnly': boolean;
    'triggerPrice': string;
    'orderExpiry': number;
    'status': OrderStatusEnum;
    'triggerStatus': OrderTriggerStatusEnum;
    'triggerTime': number;
    'parentOrderIndex': number;
    'parentOrderId': string;
    'toTriggerOrderId0': string;
    'toTriggerOrderId1': string;
    'toCancelOrderId0': string;
    'blockHeight': number;
    'timestamp': number;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "orderIndex",
            "baseName": "order_index",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "clientOrderIndex",
            "baseName": "client_order_index",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "orderId",
            "baseName": "order_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "clientOrderId",
            "baseName": "client_order_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "marketIndex",
            "baseName": "market_index",
            "type": "number",
            "format": "uint8"
        },
        {
            "name": "ownerAccountIndex",
            "baseName": "owner_account_index",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "initialBaseAmount",
            "baseName": "initial_base_amount",
            "type": "string",
            "format": ""
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "string",
            "format": ""
        },
        {
            "name": "nonce",
            "baseName": "nonce",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "remainingBaseAmount",
            "baseName": "remaining_base_amount",
            "type": "string",
            "format": ""
        },
        {
            "name": "isAsk",
            "baseName": "is_ask",
            "type": "boolean",
            "format": "boolean"
        },
        {
            "name": "baseSize",
            "baseName": "base_size",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "basePrice",
            "baseName": "base_price",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "filledBaseAmount",
            "baseName": "filled_base_amount",
            "type": "string",
            "format": ""
        },
        {
            "name": "filledQuoteAmount",
            "baseName": "filled_quote_amount",
            "type": "string",
            "format": ""
        },
        {
            "name": "side",
            "baseName": "side",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "OrderTypeEnum",
            "format": ""
        },
        {
            "name": "timeInForce",
            "baseName": "time_in_force",
            "type": "OrderTimeInForceEnum",
            "format": ""
        },
        {
            "name": "reduceOnly",
            "baseName": "reduce_only",
            "type": "boolean",
            "format": "boolean"
        },
        {
            "name": "triggerPrice",
            "baseName": "trigger_price",
            "type": "string",
            "format": ""
        },
        {
            "name": "orderExpiry",
            "baseName": "order_expiry",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "OrderStatusEnum",
            "format": ""
        },
        {
            "name": "triggerStatus",
            "baseName": "trigger_status",
            "type": "OrderTriggerStatusEnum",
            "format": ""
        },
        {
            "name": "triggerTime",
            "baseName": "trigger_time",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "parentOrderIndex",
            "baseName": "parent_order_index",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "parentOrderId",
            "baseName": "parent_order_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "toTriggerOrderId0",
            "baseName": "to_trigger_order_id_0",
            "type": "string",
            "format": ""
        },
        {
            "name": "toTriggerOrderId1",
            "baseName": "to_trigger_order_id_1",
            "type": "string",
            "format": ""
        },
        {
            "name": "toCancelOrderId0",
            "baseName": "to_cancel_order_id_0",
            "type": "string",
            "format": ""
        },
        {
            "name": "blockHeight",
            "baseName": "block_height",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "timestamp",
            "baseName": "timestamp",
            "type": "number",
            "format": "int64"
        }    ];

    static getAttributeTypeMap() {
        return Order.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum OrderTypeEnum {
    Limit = 'limit',
    Market = 'market',
    StopLoss = 'stop-loss',
    StopLossLimit = 'stop-loss-limit',
    TakeProfit = 'take-profit',
    TakeProfitLimit = 'take-profit-limit',
    Twap = 'twap',
    TwapSub = 'twap-sub',
    Liquidation = 'liquidation'
}
export enum OrderTimeInForceEnum {
    GoodTillTime = 'good-till-time',
    ImmediateOrCancel = 'immediate-or-cancel',
    PostOnly = 'post-only',
    Unknown = 'Unknown'
}
export enum OrderStatusEnum {
    InProgress = 'in-progress',
    Pending = 'pending',
    Open = 'open',
    Filled = 'filled',
    Canceled = 'canceled',
    CanceledPostOnly = 'canceled-post-only',
    CanceledReduceOnly = 'canceled-reduce-only',
    CanceledPositionNotAllowed = 'canceled-position-not-allowed',
    CanceledMarginNotAllowed = 'canceled-margin-not-allowed',
    CanceledTooMuchSlippage = 'canceled-too-much-slippage',
    CanceledNotEnoughLiquidity = 'canceled-not-enough-liquidity',
    CanceledSelfTrade = 'canceled-self-trade',
    CanceledExpired = 'canceled-expired',
    CanceledOco = 'canceled-oco',
    CanceledChild = 'canceled-child',
    CanceledLiquidation = 'canceled-liquidation'
}
export enum OrderTriggerStatusEnum {
    Na = 'na',
    Ready = 'ready',
    MarkPrice = 'mark-price',
    Twap = 'twap',
    ParentOrder = 'parent-order'
}

