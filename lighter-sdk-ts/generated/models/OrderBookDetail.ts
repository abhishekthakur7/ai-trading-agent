/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class OrderBookDetail {
    'symbol': string;
    'marketId': number;
    'status': OrderBookDetailStatusEnum;
    'takerFee': string;
    'makerFee': string;
    'liquidationFee': string;
    'minBaseAmount': string;
    'minQuoteAmount': string;
    'supportedSizeDecimals': number;
    'supportedPriceDecimals': number;
    'supportedQuoteDecimals': number;
    'sizeDecimals': number;
    'priceDecimals': number;
    'quoteMultiplier': number;
    'defaultInitialMarginFraction': number;
    'minInitialMarginFraction': number;
    'maintenanceMarginFraction': number;
    'closeoutMarginFraction': number;
    'lastTradePrice': number;
    'dailyTradesCount': number;
    'dailyBaseTokenVolume': number;
    'dailyQuoteTokenVolume': number;
    'dailyPriceLow': number;
    'dailyPriceHigh': number;
    'dailyPriceChange': number;
    'openInterest': number;
    'dailyChart': { [key: string]: number; };

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "symbol",
            "baseName": "symbol",
            "type": "string",
            "format": ""
        },
        {
            "name": "marketId",
            "baseName": "market_id",
            "type": "number",
            "format": "uint8"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "OrderBookDetailStatusEnum",
            "format": ""
        },
        {
            "name": "takerFee",
            "baseName": "taker_fee",
            "type": "string",
            "format": ""
        },
        {
            "name": "makerFee",
            "baseName": "maker_fee",
            "type": "string",
            "format": ""
        },
        {
            "name": "liquidationFee",
            "baseName": "liquidation_fee",
            "type": "string",
            "format": ""
        },
        {
            "name": "minBaseAmount",
            "baseName": "min_base_amount",
            "type": "string",
            "format": ""
        },
        {
            "name": "minQuoteAmount",
            "baseName": "min_quote_amount",
            "type": "string",
            "format": ""
        },
        {
            "name": "supportedSizeDecimals",
            "baseName": "supported_size_decimals",
            "type": "number",
            "format": "uint8"
        },
        {
            "name": "supportedPriceDecimals",
            "baseName": "supported_price_decimals",
            "type": "number",
            "format": "uint8"
        },
        {
            "name": "supportedQuoteDecimals",
            "baseName": "supported_quote_decimals",
            "type": "number",
            "format": "uint8"
        },
        {
            "name": "sizeDecimals",
            "baseName": "size_decimals",
            "type": "number",
            "format": "uint8"
        },
        {
            "name": "priceDecimals",
            "baseName": "price_decimals",
            "type": "number",
            "format": "uint8"
        },
        {
            "name": "quoteMultiplier",
            "baseName": "quote_multiplier",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "defaultInitialMarginFraction",
            "baseName": "default_initial_margin_fraction",
            "type": "number",
            "format": "uin16"
        },
        {
            "name": "minInitialMarginFraction",
            "baseName": "min_initial_margin_fraction",
            "type": "number",
            "format": "uin16"
        },
        {
            "name": "maintenanceMarginFraction",
            "baseName": "maintenance_margin_fraction",
            "type": "number",
            "format": "uin16"
        },
        {
            "name": "closeoutMarginFraction",
            "baseName": "closeout_margin_fraction",
            "type": "number",
            "format": "uin16"
        },
        {
            "name": "lastTradePrice",
            "baseName": "last_trade_price",
            "type": "number",
            "format": "double"
        },
        {
            "name": "dailyTradesCount",
            "baseName": "daily_trades_count",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "dailyBaseTokenVolume",
            "baseName": "daily_base_token_volume",
            "type": "number",
            "format": "double"
        },
        {
            "name": "dailyQuoteTokenVolume",
            "baseName": "daily_quote_token_volume",
            "type": "number",
            "format": "double"
        },
        {
            "name": "dailyPriceLow",
            "baseName": "daily_price_low",
            "type": "number",
            "format": "double"
        },
        {
            "name": "dailyPriceHigh",
            "baseName": "daily_price_high",
            "type": "number",
            "format": "double"
        },
        {
            "name": "dailyPriceChange",
            "baseName": "daily_price_change",
            "type": "number",
            "format": "double"
        },
        {
            "name": "openInterest",
            "baseName": "open_interest",
            "type": "number",
            "format": "double"
        },
        {
            "name": "dailyChart",
            "baseName": "daily_chart",
            "type": "{ [key: string]: number; }",
            "format": "double"
        }    ];

    static getAttributeTypeMap() {
        return OrderBookDetail.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum OrderBookDetailStatusEnum {
    Inactive = 'inactive',
    Frozen = 'frozen',
    Active = 'active'
}

