/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class Trade {
    'tradeId': number;
    'txHash': string;
    'type': TradeTypeEnum;
    'marketId': number;
    'size': string;
    'price': string;
    'usdAmount': string;
    'askId': number;
    'bidId': number;
    'askAccountId': number;
    'bidAccountId': number;
    'isMakerAsk': boolean;
    'blockHeight': number;
    'timestamp': number;
    'takerFee': number;
    'takerPositionSizeBefore': string;
    'takerEntryQuoteBefore': string;
    'takerInitialMarginFractionBefore': number;
    'takerPositionSignChanged': boolean;
    'makerFee': number;
    'makerPositionSizeBefore': string;
    'makerEntryQuoteBefore': string;
    'makerInitialMarginFractionBefore': number;
    'makerPositionSignChanged': boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "tradeId",
            "baseName": "trade_id",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "txHash",
            "baseName": "tx_hash",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "TradeTypeEnum",
            "format": ""
        },
        {
            "name": "marketId",
            "baseName": "market_id",
            "type": "number",
            "format": "uint8"
        },
        {
            "name": "size",
            "baseName": "size",
            "type": "string",
            "format": ""
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "string",
            "format": ""
        },
        {
            "name": "usdAmount",
            "baseName": "usd_amount",
            "type": "string",
            "format": ""
        },
        {
            "name": "askId",
            "baseName": "ask_id",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "bidId",
            "baseName": "bid_id",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "askAccountId",
            "baseName": "ask_account_id",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "bidAccountId",
            "baseName": "bid_account_id",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "isMakerAsk",
            "baseName": "is_maker_ask",
            "type": "boolean",
            "format": "boolean"
        },
        {
            "name": "blockHeight",
            "baseName": "block_height",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "timestamp",
            "baseName": "timestamp",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "takerFee",
            "baseName": "taker_fee",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "takerPositionSizeBefore",
            "baseName": "taker_position_size_before",
            "type": "string",
            "format": ""
        },
        {
            "name": "takerEntryQuoteBefore",
            "baseName": "taker_entry_quote_before",
            "type": "string",
            "format": ""
        },
        {
            "name": "takerInitialMarginFractionBefore",
            "baseName": "taker_initial_margin_fraction_before",
            "type": "number",
            "format": "uin16"
        },
        {
            "name": "takerPositionSignChanged",
            "baseName": "taker_position_sign_changed",
            "type": "boolean",
            "format": "boolean"
        },
        {
            "name": "makerFee",
            "baseName": "maker_fee",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "makerPositionSizeBefore",
            "baseName": "maker_position_size_before",
            "type": "string",
            "format": ""
        },
        {
            "name": "makerEntryQuoteBefore",
            "baseName": "maker_entry_quote_before",
            "type": "string",
            "format": ""
        },
        {
            "name": "makerInitialMarginFractionBefore",
            "baseName": "maker_initial_margin_fraction_before",
            "type": "number",
            "format": "uin16"
        },
        {
            "name": "makerPositionSignChanged",
            "baseName": "maker_position_sign_changed",
            "type": "boolean",
            "format": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return Trade.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum TradeTypeEnum {
    Trade = 'trade',
    Liquidation = 'liquidation',
    Deleverage = 'deleverage'
}

